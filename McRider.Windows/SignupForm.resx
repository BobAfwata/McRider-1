<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value> 
        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
        RU5ErkJggg==
</value>
  </data>
</root>